// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");

var SystemError = { };

var UnknownError = { };

function _makeSystemError(exc) {
  var match = exc.code;
  switch (match) {
    case "EACCES" :
        return /* AccessDenied */Block.__(0, [exc]);
    case "EADDRINUSE" :
        return /* AddressInUse */Block.__(1, [exc]);
    case "ECONNREFUSED" :
        return /* ConnectionRefused */Block.__(2, [exc]);
    case "ECONNRESET" :
        return /* ConnectionReset */Block.__(3, [exc]);
    case "EEXIST" :
        return /* FileExists */Block.__(4, [exc]);
    case "EISDIR" :
        return /* IsADirectory */Block.__(5, [exc]);
    case "EMFILE" :
        return /* TooManyOpenFiles */Block.__(6, [exc]);
    case "ENOENT" :
        return /* NoSuchFileOrDirectory */Block.__(7, [exc]);
    case "ENOTDIR" :
        return /* NotADirectory */Block.__(8, [exc]);
    case "ENOTEMPTY" :
        return /* DirectoryNotEmpty */Block.__(9, [exc]);
    case "ENOTFOUND" :
        return /* DNSLookupFailed */Block.__(10, [exc]);
    case "EPERM" :
        return /* NotPermitted */Block.__(11, [exc]);
    case "EPIPE" :
        return /* BrokenPipe */Block.__(12, [exc]);
    case "ETIMEDOUT" :
        return /* TimedOut */Block.__(13, [exc]);
    default:
      return /* UnknownSystemError */Block.__(14, [exc]);
  }
}

function _makeUnknownError(exc) {
  return /* OtherUnknownError */Block.__(15, [exc]);
}

function fromException(exc) {
  var _makeError = (function (makeSystemError, makeUnknownError, exc) {
            return exc.syscall === undefined
                ? makeUnknownError(exc)
                : makeSystemError(exc)
        });
  return _makeError(_makeSystemError, _makeUnknownError, exc);
}

exports.SystemError = SystemError;
exports.UnknownError = UnknownError;
exports._makeSystemError = _makeSystemError;
exports._makeUnknownError = _makeUnknownError;
exports.fromException = fromException;
/* No side effect */
