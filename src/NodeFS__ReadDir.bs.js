// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var Relude_IO = require("relude/src/Relude_IO.bs.js");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var NodeFS__Error = require("./NodeFS__Error.bs.js");
var Relude_Result = require("relude/src/Relude_Result.bs.js");
var Relude_Js_Promise = require("relude/src/js/Relude_Js_Promise.bs.js");

var DirectoryEntry = { };

function readDir($staropt$star, path) {
  var encoding = $staropt$star !== undefined ? $staropt$star : "utf-8";
  return Relude_IO.mapError(NodeFS__Error.fromException, Relude_Js_Promise.toIOLazy((function (param) {
                    return new Promise((function (resolve, reject) {
                                  Fs.readdir(path, {
                                        withFileTypes: true,
                                        encoding: encoding
                                      }, (function (error, files) {
                                          Relude_Result.tapError(reject, Relude_Result.tapOk(resolve, Relude_Result.flip(Relude_Result.fromOption(files, (error == null) ? undefined : Caml_option.some(error)))));
                                          return /* () */0;
                                        }));
                                  return /* () */0;
                                }));
                  })));
}

var $$Error = /* alias */0;

var Utils = /* alias */0;

exports.$$Error = $$Error;
exports.Utils = Utils;
exports.DirectoryEntry = DirectoryEntry;
exports.readDir = readDir;
/* fs Not a pure module */
